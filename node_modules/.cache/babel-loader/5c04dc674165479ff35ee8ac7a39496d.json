{"remainingRequest":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\babel-loader\\lib\\index.js!C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\BuildSchoolLab\\MVC III\\Admin\\src\\views\\ProductSalesChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\src\\views\\ProductSalesChart\\index.vue","mtime":1600868035311},{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600865858207},{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1600865857108},{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600865858207},{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1600865868708}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["\n\n<script>\n  import Axios from 'axios'\n  import Chart from 'chart.js'\n  // import '../../assets/chartjs/productchart.js'\n  // import '../../assets/chartjs/productclasschart.js'\n  const url = 'https://localhost:44306/'\n  const SalesQuantity = url + 'api/Chart/SalesQuantity'\n  const MonthlyTransactions = url + 'api/Chart/MonthlyTransactions'\n  const ClassSalesQuantity = url + 'api/Chart/ClassSalesQuantity'\n  const NewOrders = url + 'api/Chart/OrderNowQuantity'\n  const ShipmentAmount = url + 'api/Chart/ShipmentAmount'\n  const PurchaseAmount = url + 'api/Chart/PurchaseAmount'\n  const MemberQuantity = url + 'Member/MemberQuantity'\n  const WithListQuantity = url + 'api/Chart/WithListQuantity'\n\n  export default {\n    name: 'productsale',\n    data() {\n      return {\n        NewOrders: '',\n        CurrentMember: '',\n        ShipmentAmount: '',\n        PurchaseAmount: ''\n      }\n    },\n    mounted() {\n      var totalamountjson = []\n      Axios.get(SalesQuantity)\n        .then(res => {\n          // console.log(res.data.data)\n          totalamountjson = res.data.data\n          let productname = []\n          let producttotalamount = []\n          let producttotalquantity = []\n          totalamountjson.forEach(el => {\n            productname.push(el.name)\n            producttotalamount.push(el.totalAmount)\n            producttotalquantity.push(el.totalQuantity)\n          })\n          var productdata = {\n            ChartName1: '產品銷售數',\n            ChartName2: '產品銷售額',\n            Name: productname,\n            TotalAmount: producttotalamount,\n            TotalQuantity: producttotalquantity\n          }\n          // console.log(productdata)\n          // var salesChartCanvas = $('#revenue-chart-canvas').get(0).getContext('2d')\n          var productsalesChartCanvas = document.getElementById(\n            'revenue-chart-canvas'\n          )\n          var productsalesChartData = {\n            labels: productdata.Name,\n            datasets: [\n              {\n                label: productdata.ChartName1,\n                backgroundColor: 'rgba(60,141,188,0.5)',\n                borderColor: 'rgba(60,141,188,0.8)',\n                fill: true,\n                yAxisID: 'A',\n                data: productdata.TotalQuantity\n              },\n              {\n                label: productdata.ChartName2,\n                backgroundColor: 'transparent',\n                borderColor: 'rgba(210, 214, 222, 1)',\n                pointRadius: 10,\n                pointStyle: 'circle',\n                pointColor: 'rgba(210, 214, 222, 1)',\n                pointBackgroundColor: 'rgba(210, 214, 222, 1)',\n                pointStrokeColor: '#c1c7d1',\n                pointHighlightFill: '#fff',\n                pointHighlightStroke: 'rgba(220,220,220,1)',\n                fill: true,\n                yAxisID: 'B',\n                type: 'line',\n                data: productdata.TotalAmount\n              }\n            ]\n          }\n          var productsalesChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            legend: {\n              position: 'bottom',\n              labels: {\n                fontColor: 'black'\n              }\n            },\n            scales: {\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  ticks: {\n                    display: false\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  id: 'A',\n                  type: 'linear',\n                  position: 'left',\n                  ticks: {\n                    min: 0\n                  }\n                },\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  id: 'B',\n                  type: 'linear',\n                  position: 'right',\n                  ticks: {\n                    min: 0\n                  }\n                }\n              ]\n            }\n          }\n          // var productsalesChart =\n          new Chart(productsalesChartCanvas, {\n            type: 'bar',\n            data: productsalesChartData,\n            options: productsalesChartOptions\n          })\n        })\n        .catch(err => {\n          console.log(err)\n        })\n\n      var totalTransactionsjson = []\n      Axios.get(MonthlyTransactions)\n        .then(res => {\n          totalTransactionsjson = res.data.data\n          // console.log(totalTransactionsjson)\n          let month = []\n          let totaltransactions = []\n          let totalturnover = []\n          totalTransactionsjson.forEach(el => {\n            month.push(`${el.month}月`)\n            totaltransactions.push(el.totalTransactions)\n            totalturnover.push(el.totalTurnover)\n          })\n\n          var data = {\n            ChartName1: '月成單數',\n            ChartName2: '月營業額',\n            Month: month,\n            TotalTransactions: totaltransactions,\n            ToTalturnover: totalturnover\n          }\n\n          var salesChartCanvas = document.getElementById(\n            'revenue-month-chart-canvas'\n          )\n          var salesChartData = {\n            labels: data.Month,\n            datasets: [\n              {\n                label: data.ChartName1,\n                backgroundColor: 'rgba(60,141,188,0.5)',\n                borderColor: 'rgba(60,141,188,0.8)',\n                fill: true,\n                yAxisID: 'A',\n                data: data.TotalTransactions\n              },\n              {\n                label: data.ChartName2,\n                backgroundColor: 'transparent',\n                borderColor: 'rgba(210, 214, 222, 1)',\n                pointRadius: 10,\n                pointStyle: 'circle',\n                pointColor: 'rgba(210, 214, 222, 1)',\n                pointBackgroundColor: 'rgba(210, 214, 222, 1)',\n                pointStrokeColor: '#c1c7d1',\n                pointHighlightFill: '#fff',\n                pointHighlightStroke: 'rgba(220,220,220,1)',\n                fill: true,\n                yAxisID: 'B',\n                type: 'line',\n                data: data.ToTalturnover\n              }\n            ]\n          }\n          var salesChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            legend: {\n              position: 'bottom',\n              labels: {\n                fontColor: 'black'\n              }\n            },\n            scales: {\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  id: 'A',\n                  type: 'linear',\n                  position: 'left',\n                  ticks: {\n                    min: 0\n                  }\n                },\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  id: 'B',\n                  type: 'linear',\n                  position: 'right',\n                  ticks: {\n                    min: 0\n                  }\n                }\n              ]\n            }\n          }\n          // var salesChart =\n          new Chart(salesChartCanvas, {\n            type: 'bar',\n            data: salesChartData,\n            options: salesChartOptions\n          })\n        })\n        .catch(err => {\n          console.log(err)\n        })\n\n      var productclaajson = []\n      Axios.get(ClassSalesQuantity)\n        .then(res => {\n          productclaajson = res.data.data\n          let classname = []\n          let classtotalquantity = []\n          productclaajson.forEach(el => {\n            classname.push(el.name)\n            classtotalquantity.push(el.totalQuantity)\n          })\n          var classdata = {\n            ChartName1: '產品類別銷售數',\n            Name: classname,\n            TotalQuantity: classtotalquantity\n          }\n\n          var classsalesChartCanvas = document.getElementById(\n            'revenue-class-chart-canvas'\n          )\n          var classsalesChartData = {\n            labels: classdata.Name,\n            datasets: [\n              {\n                label: classdata.ChartName1,\n                backgroundColor: [\n                  '#FF88C2',\n                  '#FFBB66',\n                  '#FFDD55',\n                  '#DDFF77',\n                  '#BBFF66',\n                  '#66FF66',\n                  '#77FFCC',\n                  '#99BBFF',\n                  '\t#B94FFF',\n                  '#E38EFF',\n                  '#FF8888'\n                ],\n                borderColor: [\n                  '#FF88C2',\n                  '#FFBB66',\n                  '#FFDD55',\n                  '#DDFF77',\n                  '#BBFF66',\n                  '#66FF66',\n                  '#77FFCC',\n                  '#99BBFF',\n                  '\t#B94FFF',\n                  '#E38EFF',\n                  '#FF8888'\n                ],\n                fill: true,\n                data: classdata.TotalQuantity\n              }\n            ]\n          }\n          var classsalesChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            legend: {\n              position: 'bottom',\n              labels: {\n                fontColor: 'black'\n              }\n            },\n            scales: {\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  ticks: {\n                    display: false\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  // type: 'linear',\n                  position: 'left',\n                  ticks: {\n                    display: false\n                  }\n                }\n              ]\n            }\n          }\n          // var classsalesChart =\n          new Chart(classsalesChartCanvas, {\n            type: 'pie',\n            data: classsalesChartData,\n            options: classsalesChartOptions\n          })\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      var withlistjson = []\n      Axios.get(WithListQuantity)\n        .then(res => {\n          withlistjson = res.data.data\n          console.log(withlistjson)\n          let productname = []\n          let totalquantity = []\n          for (let i = 0; i < 7; i++) {\n            productname.push(withlistjson[i].productName)\n            totalquantity.push(withlistjson[i].totalQuantity)\n          }\n          var withlistdata = {\n            ChartName1: '產品類別銷售數',\n            Name: productname,\n            TotalQuantity: totalquantity\n          }\n\n          var withlistChartCanvas = document.getElementById(\n            'revenue-withlist-chart-canvas'\n          )\n          var withlistChartData = {\n            labels: withlistdata.Name,\n            datasets: [\n              {\n                label: withlistdata.ChartName1,\n                backgroundColor: [\n                  '#FF88C2',\n                  '#FFBB66',\n                  '#FFDD55',\n                  '#DDFF77',\n                  '#BBFF66',\n                  '#66FF66',\n                  '#77FFCC'\n                ],\n                borderColor: [\n                  '#FF88C2',\n                  '#FFBB66',\n                  '#FFDD55',\n                  '#DDFF77',\n                  '#BBFF66',\n                  '#66FF66',\n                  '#77FFCC'\n                ],\n                fill: true,\n                data: withlistdata.TotalQuantity\n              }\n            ]\n          }\n          var withlistChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            legend: {\n              position: 'bottom',\n              labels: {\n                fontColor: 'black'\n              }\n            },\n            scales: {\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  ticks: {\n                    display: false\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  },\n                  position: 'left',\n                  ticks: {\n                    display: false\n                  }\n                }\n              ]\n            }\n          }\n          new Chart(withlistChartCanvas, {\n            type: 'polarArea',\n            data: withlistChartData,\n            options: withlistChartOptions\n          })\n        })\n        .catch(err => {\n          console.log(err)\n        })\n\n      Axios.get(NewOrders)\n        .then(res => {\n          // console.log(`長度:${res.data.data.length}`)\n          this.NewOrders = res.data.data.length\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      Axios.get(ShipmentAmount)\n        .then(res => {\n          console.log(res.data.data.length)\n          if (res.data.data.length == 0) {\n            this.ShipmentAmount = 0\n          } else {\n            this.ShipmentAmount = res.data.data[0].totalAmount\n          }\n\n          // console.log(res.data.data[0].totalAmount)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      Axios.get(PurchaseAmount)\n        .then(res => {\n          if (res.data.data.length == 0) {\n            this.PurchaseAmount = 0\n          } else {\n            this.PurchaseAmount = res.data.data[0].totalAmount\n          }\n\n          // console.log(res.data.data[0].totalAmount)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      Axios.get(MemberQuantity)\n        .then(res => {\n          this.CurrentMember = res.data.data.totalQuantity\n          // console.log(res.data.data.totalQuantity)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }\n</script>\n\n<template src=\"./template.html\"></template>\n"],"sourceRoot":"src/views/ProductSalesChart"}]}