{"remainingRequest":"D:\\Vue-cli\\Admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Vue-cli\\Admin\\src\\views\\ProductSalesChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Vue-cli\\Admin\\src\\views\\ProductSalesChart\\index.vue","mtime":1601109341592},{"path":"D:\\Vue-cli\\Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1601109292437},{"path":"D:\\Vue-cli\\Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601109294368},{"path":"D:\\Vue-cli\\Admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1601109329012}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/ProductSalesChart","sourcesContent":["\r\n\r\n<script>\r\n  import Axios from 'axios'\r\n  import Chart from 'chart.js'\r\n  // import '../../assets/chartjs/productchart.js'\r\n  // import '../../assets/chartjs/productclasschart.js'\r\n  const url = 'https://localhost:44306/'\r\n  const SalesQuantity = url + 'api/Chart/SalesQuantity'\r\n  const MonthlyTransactions = url + 'api/Chart/MonthlyTransactions'\r\n  const ClassSalesQuantity = url + 'api/Chart/ClassSalesQuantity'\r\n  const NewOrders = url + 'api/Chart/OrderNowQuantity'\r\n  const ShipmentAmount = url + 'api/Chart/ShipmentAmount'\r\n  const PurchaseAmount = url + 'api/Chart/PurchaseAmount'\r\n  const MemberQuantity = url + 'Member/MemberQuantity'\r\n  const WithListQuantity = url + 'api/Chart/WithListQuantity'\r\n\r\n  export default {\r\n    name: 'productsale',\r\n    data() {\r\n      return {\r\n        NewOrders: '',\r\n        CurrentMember: '',\r\n        ShipmentAmount: '',\r\n        PurchaseAmount: ''\r\n      }\r\n    },\r\n    mounted() {\r\n      var totalamountjson = []\r\n      Axios.get(SalesQuantity)\r\n        .then(res => {\r\n          // console.log(res.data.data)\r\n          totalamountjson = res.data.data\r\n          let productname = []\r\n          let producttotalamount = []\r\n          let producttotalquantity = []\r\n          totalamountjson.forEach(el => {\r\n            productname.push(el.name)\r\n            producttotalamount.push(el.totalAmount)\r\n            producttotalquantity.push(el.totalQuantity)\r\n          })\r\n          var productdata = {\r\n            ChartName1: '產品銷售數',\r\n            ChartName2: '產品銷售額',\r\n            Name: productname,\r\n            TotalAmount: producttotalamount,\r\n            TotalQuantity: producttotalquantity\r\n          }\r\n          // console.log(productdata)\r\n          // var salesChartCanvas = $('#revenue-chart-canvas').get(0).getContext('2d')\r\n          var productsalesChartCanvas = document.getElementById(\r\n            'revenue-chart-canvas'\r\n          )\r\n          var productsalesChartData = {\r\n            labels: productdata.Name,\r\n            datasets: [\r\n              {\r\n                label: productdata.ChartName1,\r\n                backgroundColor: 'rgba(60,141,188,0.5)',\r\n                borderColor: 'rgba(60,141,188,0.8)',\r\n                fill: true,\r\n                yAxisID: 'A',\r\n                data: productdata.TotalQuantity\r\n              },\r\n              {\r\n                label: productdata.ChartName2,\r\n                backgroundColor: 'transparent',\r\n                borderColor: 'rgba(210, 214, 222, 1)',\r\n                pointRadius: 10,\r\n                pointStyle: 'circle',\r\n                pointColor: 'rgba(210, 214, 222, 1)',\r\n                pointBackgroundColor: 'rgba(210, 214, 222, 1)',\r\n                pointStrokeColor: '#c1c7d1',\r\n                pointHighlightFill: '#fff',\r\n                pointHighlightStroke: 'rgba(220,220,220,1)',\r\n                fill: true,\r\n                yAxisID: 'B',\r\n                type: 'line',\r\n                data: productdata.TotalAmount\r\n              }\r\n            ]\r\n          }\r\n          var productsalesChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            legend: {\r\n              position: 'bottom',\r\n              labels: {\r\n                fontColor: 'black'\r\n              }\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  ticks: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  id: 'A',\r\n                  type: 'linear',\r\n                  position: 'left',\r\n                  ticks: {\r\n                    min: 0\r\n                  }\r\n                },\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  id: 'B',\r\n                  type: 'linear',\r\n                  position: 'right',\r\n                  ticks: {\r\n                    min: 0\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n          // var productsalesChart =\r\n          new Chart(productsalesChartCanvas, {\r\n            type: 'bar',\r\n            data: productsalesChartData,\r\n            options: productsalesChartOptions\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n\r\n      var totalTransactionsjson = []\r\n      Axios.get(MonthlyTransactions)\r\n        .then(res => {\r\n          totalTransactionsjson = res.data.data\r\n          // console.log(totalTransactionsjson)\r\n          let month = []\r\n          let totaltransactions = []\r\n          let totalturnover = []\r\n          totalTransactionsjson.forEach(el => {\r\n            month.push(`${el.month}月`)\r\n            totaltransactions.push(el.totalTransactions)\r\n            totalturnover.push(el.totalTurnover)\r\n          })\r\n\r\n          var data = {\r\n            ChartName1: '月成單數',\r\n            ChartName2: '月營業額',\r\n            Month: month,\r\n            TotalTransactions: totaltransactions,\r\n            ToTalturnover: totalturnover\r\n          }\r\n\r\n          var salesChartCanvas = document.getElementById(\r\n            'revenue-month-chart-canvas'\r\n          )\r\n          var salesChartData = {\r\n            labels: data.Month,\r\n            datasets: [\r\n              {\r\n                label: data.ChartName1,\r\n                backgroundColor: 'rgba(60,141,188,0.5)',\r\n                borderColor: 'rgba(60,141,188,0.8)',\r\n                fill: true,\r\n                yAxisID: 'A',\r\n                data: data.TotalTransactions\r\n              },\r\n              {\r\n                label: data.ChartName2,\r\n                backgroundColor: 'transparent',\r\n                borderColor: 'rgba(210, 214, 222, 1)',\r\n                pointRadius: 10,\r\n                pointStyle: 'circle',\r\n                pointColor: 'rgba(210, 214, 222, 1)',\r\n                pointBackgroundColor: 'rgba(210, 214, 222, 1)',\r\n                pointStrokeColor: '#c1c7d1',\r\n                pointHighlightFill: '#fff',\r\n                pointHighlightStroke: 'rgba(220,220,220,1)',\r\n                fill: true,\r\n                yAxisID: 'B',\r\n                type: 'line',\r\n                data: data.ToTalturnover\r\n              }\r\n            ]\r\n          }\r\n          var salesChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            legend: {\r\n              position: 'bottom',\r\n              labels: {\r\n                fontColor: 'black'\r\n              }\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  id: 'A',\r\n                  type: 'linear',\r\n                  position: 'left',\r\n                  ticks: {\r\n                    min: 0\r\n                  }\r\n                },\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  id: 'B',\r\n                  type: 'linear',\r\n                  position: 'right',\r\n                  ticks: {\r\n                    min: 0\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n          // var salesChart =\r\n          new Chart(salesChartCanvas, {\r\n            type: 'bar',\r\n            data: salesChartData,\r\n            options: salesChartOptions\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n\r\n      var productclaajson = []\r\n      Axios.get(ClassSalesQuantity)\r\n        .then(res => {\r\n          productclaajson = res.data.data\r\n          let classname = []\r\n          let classtotalquantity = []\r\n          productclaajson.forEach(el => {\r\n            classname.push(el.name)\r\n            classtotalquantity.push(el.totalQuantity)\r\n          })\r\n          var classdata = {\r\n            ChartName1: '產品類別銷售數',\r\n            Name: classname,\r\n            TotalQuantity: classtotalquantity\r\n          }\r\n\r\n          var classsalesChartCanvas = document.getElementById(\r\n            'revenue-class-chart-canvas'\r\n          )\r\n          var classsalesChartData = {\r\n            labels: classdata.Name,\r\n            datasets: [\r\n              {\r\n                label: classdata.ChartName1,\r\n                backgroundColor: [\r\n                  '#FF88C2',\r\n                  '#FFBB66',\r\n                  '#FFDD55',\r\n                  '#DDFF77',\r\n                  '#BBFF66',\r\n                  '#66FF66',\r\n                  '#77FFCC',\r\n                  '#99BBFF',\r\n                  '\t#B94FFF',\r\n                  '#E38EFF',\r\n                  '#FF8888'\r\n                ],\r\n                borderColor: [\r\n                  '#FF88C2',\r\n                  '#FFBB66',\r\n                  '#FFDD55',\r\n                  '#DDFF77',\r\n                  '#BBFF66',\r\n                  '#66FF66',\r\n                  '#77FFCC',\r\n                  '#99BBFF',\r\n                  '\t#B94FFF',\r\n                  '#E38EFF',\r\n                  '#FF8888'\r\n                ],\r\n                fill: true,\r\n                data: classdata.TotalQuantity\r\n              }\r\n            ]\r\n          }\r\n          var classsalesChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            legend: {\r\n              position: 'bottom',\r\n              labels: {\r\n                fontColor: 'black'\r\n              }\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  ticks: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  // type: 'linear',\r\n                  position: 'left',\r\n                  ticks: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n          // var classsalesChart =\r\n          new Chart(classsalesChartCanvas, {\r\n            type: 'pie',\r\n            data: classsalesChartData,\r\n            options: classsalesChartOptions\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      var withlistjson = []\r\n      Axios.get(WithListQuantity)\r\n        .then(res => {\r\n          withlistjson = res.data.data\r\n          console.log(withlistjson)\r\n          let productname = []\r\n          let totalquantity = []\r\n          for (let i = 0; i < 7; i++) {\r\n            productname.push(withlistjson[i].productName)\r\n            totalquantity.push(withlistjson[i].totalQuantity)\r\n          }\r\n          var withlistdata = {\r\n            ChartName1: '產品類別銷售數',\r\n            Name: productname,\r\n            TotalQuantity: totalquantity\r\n          }\r\n\r\n          var withlistChartCanvas = document.getElementById(\r\n            'revenue-withlist-chart-canvas'\r\n          )\r\n          var withlistChartData = {\r\n            labels: withlistdata.Name,\r\n            datasets: [\r\n              {\r\n                label: withlistdata.ChartName1,\r\n                backgroundColor: [\r\n                  '#FF88C2',\r\n                  '#FFBB66',\r\n                  '#FFDD55',\r\n                  '#DDFF77',\r\n                  '#BBFF66',\r\n                  '#66FF66',\r\n                  '#77FFCC'\r\n                ],\r\n                borderColor: [\r\n                  '#FF88C2',\r\n                  '#FFBB66',\r\n                  '#FFDD55',\r\n                  '#DDFF77',\r\n                  '#BBFF66',\r\n                  '#66FF66',\r\n                  '#77FFCC'\r\n                ],\r\n                fill: true,\r\n                data: withlistdata.TotalQuantity\r\n              }\r\n            ]\r\n          }\r\n          var withlistChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            legend: {\r\n              position: 'bottom',\r\n              labels: {\r\n                fontColor: 'black'\r\n              }\r\n            },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  ticks: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: false\r\n                  },\r\n                  position: 'left',\r\n                  ticks: {\r\n                    display: false\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n          new Chart(withlistChartCanvas, {\r\n            type: 'polarArea',\r\n            data: withlistChartData,\r\n            options: withlistChartOptions\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n\r\n      Axios.get(NewOrders)\r\n        .then(res => {\r\n          // console.log(`長度:${res.data.data.length}`)\r\n          this.NewOrders = res.data.data.length\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      Axios.get(ShipmentAmount)\r\n        .then(res => {\r\n          console.log(res.data.data.length)\r\n          if (res.data.data.length == 0) {\r\n            this.ShipmentAmount = 0\r\n          } else {\r\n            this.ShipmentAmount = res.data.data[0].totalAmount\r\n          }\r\n\r\n          // console.log(res.data.data[0].totalAmount)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      Axios.get(PurchaseAmount)\r\n        .then(res => {\r\n          if (res.data.data.length == 0) {\r\n            this.PurchaseAmount = 0\r\n          } else {\r\n            this.PurchaseAmount = res.data.data[0].totalAmount\r\n          }\r\n\r\n          // console.log(res.data.data[0].totalAmount)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      Axios.get(MemberQuantity)\r\n        .then(res => {\r\n          this.CurrentMember = res.data.data.totalQuantity\r\n          // console.log(res.data.data.totalQuantity)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n</script>\r\n\r\n<template src=\"./template.html\"></template>\r\n"]}]}