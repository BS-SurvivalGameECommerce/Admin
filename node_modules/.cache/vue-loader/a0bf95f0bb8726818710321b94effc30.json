{"remainingRequest":"D:\\Admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Admin\\src\\views\\ProductSalesChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Admin\\src\\views\\ProductSalesChart\\index.vue","mtime":1600190342589},{"path":"D:\\Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600094741438},{"path":"D:\\Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1600094739163},{"path":"D:\\Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600094741438},{"path":"D:\\Admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1600094759039}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/ProductSalesChart","sourcesContent":["\r\n\r\n<script>\r\nimport Axios from 'axios';\r\nimport Chart from 'chart.js'\r\n// import '../../assets/chartjs/productchart.js'\r\n// import '../../assets/chartjs/productclasschart.js'\r\nconst url = 'https://localhost:5001/'\r\nconst SalesQuantity = url + 'api/Chart/SalesQuantity'\r\nconst MonthlyTransactions = url + 'api/Chart/MonthlyTransactions'\r\nconst ClassSalesQuantity = url + 'api/Chart/ClassSalesQuantity'\r\nconst NewOrders = url + 'api/Chart/OrderNowQuantity'\r\nconst ShipmentAmount = url + 'api/Chart/ShipmentAmount'\r\nconst PurchaseAmount = url + 'api/Chart/PurchaseAmount'\r\nconst MemberQuantity = url + 'Member/MemberQuantity'\r\nconst WithListQuantity = url+'api/Chart/WithListQuantity'\r\n\r\nexport default {\r\n    name:'productsale',\r\n    data(){\r\n        return{\r\n            NewOrders:'',\r\n            CurrentMember:'',\r\n            ShipmentAmount:'',\r\n            PurchaseAmount:''\r\n        }\r\n    },\r\n    mounted(){\r\n    var totalamountjson =[]\r\n    Axios\r\n        .get(SalesQuantity)\r\n        .then((res) => {\r\n            // console.log(res.data.data)\r\n            totalamountjson = res.data.data\r\n            let productname = [];\r\n            let producttotalamount = [];\r\n            let producttotalquantity =[];\r\n            totalamountjson.forEach(el => {\r\n                productname.push(el.name);\r\n                producttotalamount.push(el.totalAmount);\r\n                producttotalquantity.push(el.totalQuantity)\r\n            })\r\n            var productdata = { \r\n                    'ChartName1': '產品銷售數' ,\r\n                    'ChartName2': '產品銷售額', \r\n                    'Name': productname, \r\n                    'TotalAmount': producttotalamount,\r\n                    'TotalQuantity':producttotalquantity \r\n                };\r\n                // console.log(productdata)\r\n                // var salesChartCanvas = $('#revenue-chart-canvas').get(0).getContext('2d')\r\n            var productsalesChartCanvas = document.getElementById('revenue-chart-canvas');\r\n            var productsalesChartData = {\r\n                    labels: productdata.Name,\r\n                    datasets: [\r\n                    {\r\n                        label: productdata.ChartName1,\r\n                        backgroundColor: 'rgba(60,141,188,0.5)',\r\n                        borderColor: 'rgba(60,141,188,0.8)',\r\n                        fill: true,\r\n                        yAxisID: 'A',\r\n                        data: productdata.TotalQuantity\r\n                    },\r\n                    {\r\n                        label: productdata.ChartName2,\r\n                        backgroundColor: 'transparent',\r\n                        borderColor: 'rgba(210, 214, 222, 1)',\r\n                        pointRadius: 10,\r\n                        pointStyle: 'circle',\r\n                        pointColor: 'rgba(210, 214, 222, 1)',\r\n                        pointBackgroundColor:'rgba(210, 214, 222, 1)',\r\n                        pointStrokeColor: '#c1c7d1',\r\n                        pointHighlightFill: '#fff',\r\n                        pointHighlightStroke: 'rgba(220,220,220,1)',\r\n                        fill: true,\r\n                        yAxisID: 'B',\r\n                        type: 'line',\r\n                        data: productdata.TotalAmount\r\n                    }]\r\n                }\r\n            var productsalesChartOptions = {\r\n                    maintainAspectRatio: false,\r\n                    responsive: true,\r\n                    legend: {\r\n                        position: 'bottom',\r\n                        labels: {\r\n                            fontColor: 'black',\r\n                        }\r\n                    },\r\n                    scales: {\r\n                        xAxes: [{\r\n                            gridLines: {\r\n                                display: false,\r\n                            },\r\n                            ticks: {\r\n                                display: false,\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            gridLines: {\r\n                                display: false\r\n                            },\r\n                            id: 'A',\r\n                            type: 'linear',\r\n                            position: 'left',\r\n                            ticks: {\r\n                                min: 0\r\n                            }\r\n                        },\r\n                        {\r\n                            gridLines: {\r\n                                display: false\r\n                            },\r\n                            id: 'B',\r\n                            type: 'linear',\r\n                            position: 'right',\r\n                            ticks: {\r\n                                min: 0\r\n                            }\r\n                        }\r\n                        ]}\r\n                }\r\n                // var productsalesChart = \r\n            new Chart(productsalesChartCanvas, {\r\n                type: 'bar',\r\n                data: productsalesChartData,\r\n                options: productsalesChartOptions\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n\r\n    var totalTransactionsjson =[]\r\n    Axios\r\n        .get(MonthlyTransactions)\r\n        .then((res)=>{\r\n\r\n            totalTransactionsjson=res.data.data\r\n            // console.log(totalTransactionsjson)\r\n            let month = [];\r\n            let totaltransactions = [];\r\n            let  totalturnover=[];\r\n            totalTransactionsjson.forEach(el => {\r\n                month.push(`${el.month}月`);\r\n                totaltransactions.push(el.totalTransactions);\r\n                totalturnover.push(el.totalTurnover)\r\n            })\r\n\r\n            var data = { 'ChartName1': '月成單數' ,'ChartName2': '月營業額', 'Month': month, 'TotalTransactions': totaltransactions,'ToTalturnover':totalturnover };\r\n\r\n            var salesChartCanvas = document.getElementById('revenue-month-chart-canvas');\r\n            var salesChartData = {\r\n                labels: data.Month,\r\n                datasets: [\r\n                {\r\n                    label: data.ChartName1,\r\n                    backgroundColor: 'rgba(60,141,188,0.5)',\r\n                    borderColor: 'rgba(60,141,188,0.8)',\r\n                    fill: true,\r\n                    yAxisID: 'A',\r\n                    data: data.TotalTransactions\r\n                },\r\n                {\r\n                    label: data.ChartName2,\r\n                    backgroundColor: 'transparent',\r\n                    borderColor: 'rgba(210, 214, 222, 1)',\r\n                    pointRadius: 10,\r\n                    pointStyle: 'circle',\r\n                    pointColor: 'rgba(210, 214, 222, 1)',\r\n                    pointBackgroundColor:'rgba(210, 214, 222, 1)',\r\n                    pointStrokeColor: '#c1c7d1',\r\n                    pointHighlightFill: '#fff',\r\n                    pointHighlightStroke: 'rgba(220,220,220,1)',\r\n                    fill: true,\r\n                    yAxisID: 'B',\r\n                    type: 'line',\r\n                    data: data.ToTalturnover\r\n                }]\r\n            }\r\n            var salesChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            legend: {\r\n                position: 'bottom',\r\n                labels: {\r\n                    fontColor: 'black',\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display: false\r\n                    },\r\n                    id: 'A',\r\n                    type: 'linear',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        min: 0\r\n                    }\r\n                },\r\n                {\r\n                    gridLines: {\r\n                        display: false\r\n                    },\r\n                    id: 'B',\r\n                    type: 'linear',\r\n                    position: 'right',\r\n                    ticks: {\r\n                        min: 0\r\n                    }\r\n                }\r\n                ]}\r\n            }\r\n            // var salesChart = \r\n            new Chart(salesChartCanvas, {\r\n                type: 'bar',\r\n                data: salesChartData,\r\n                options: salesChartOptions\r\n            })\r\n\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n\r\n    var productclaajson =[]\r\n    Axios\r\n        .get(ClassSalesQuantity)\r\n        .then((res)=>{\r\n            productclaajson=res.data.data\r\n            let classname = [];\r\n            let classtotalquantity = [];\r\n            productclaajson.forEach(el => {\r\n                classname.push(el.name);\r\n                classtotalquantity.push(el.totalQuantity);\r\n            })\r\n            var classdata = { 'ChartName1': '產品類別銷售數', 'Name': classname, 'TotalQuantity':classtotalquantity };\r\n\r\n            var classsalesChartCanvas = document.getElementById('revenue-class-chart-canvas');\r\n            var classsalesChartData = {\r\n                labels: classdata.Name,\r\n                datasets: [\r\n                {\r\n                    label: classdata.ChartName1,\r\n                    backgroundColor: ['#FF88C2','#FFBB66','#FFDD55','#DDFF77','#BBFF66','#66FF66','#77FFCC','#99BBFF','\t#B94FFF','#E38EFF','#FF8888'],\r\n                    borderColor: ['#FF88C2','#FFBB66','#FFDD55','#DDFF77','#BBFF66','#66FF66','#77FFCC','#99BBFF','\t#B94FFF','#E38EFF','#FF8888'],\r\n                    fill: true,\r\n                    data: classdata.TotalQuantity\r\n                }]\r\n            }\r\n            var classsalesChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            legend: {\r\n                position: 'bottom',\r\n                labels: {\r\n                    fontColor: 'black',\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false\r\n                    },\r\n                    ticks: {\r\n                        display: false,\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display: false\r\n                    },\r\n                    // type: 'linear',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        display: false,\r\n                    }\r\n                }\r\n                ]}\r\n            }\r\n            // var classsalesChart =\r\n            new Chart(classsalesChartCanvas, {\r\n                type: 'pie',\r\n                data: classsalesChartData,\r\n                options: classsalesChartOptions\r\n            })\r\n\r\n            })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    var withlistjson=[]\r\n    Axios\r\n        .get(WithListQuantity)\r\n        .then((res)=>{\r\n            withlistjson=res.data.data\r\n            console.log(withlistjson)\r\n            let  productname  =[];\r\n            let totalquantity = [];\r\n            for(let i=0; i<7;i++){\r\n                productname.push(withlistjson[i].productName)\r\n                totalquantity.push(withlistjson[i].totalQuantity)\r\n            }\r\n            var withlistdata = {'ChartName1': '產品類別銷售數', 'Name': productname, 'TotalQuantity':totalquantity}\r\n\r\n            var withlistChartCanvas = document.getElementById('revenue-withlist-chart-canvas');\r\n            var withlistChartData = {\r\n                labels: withlistdata.Name,\r\n                datasets: [\r\n                {\r\n                    label: withlistdata.ChartName1,\r\n                    backgroundColor: ['#FF88C2','#FFBB66','#FFDD55','#DDFF77','#BBFF66','#66FF66','#77FFCC'],\r\n                    borderColor: ['#FF88C2','#FFBB66','#FFDD55','#DDFF77','#BBFF66','#66FF66','#77FFCC'],\r\n                    fill: true,\r\n                    data: withlistdata.TotalQuantity\r\n                }]\r\n            }\r\n            var withlistChartOptions = {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            legend: {\r\n                position: 'bottom',\r\n                labels: {\r\n                    fontColor: 'black',\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false\r\n                    },\r\n                    ticks: {\r\n                        display: false,\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display: false\r\n                    },\r\n                    position: 'left',\r\n                    ticks: {\r\n                        display: false,\r\n                    }\r\n                }\r\n                ]}\r\n            }\r\n            new Chart(withlistChartCanvas, {\r\n                type: 'polarArea',\r\n                data: withlistChartData,\r\n                options: withlistChartOptions\r\n            })\r\n\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n\r\n    Axios\r\n        .get(NewOrders)\r\n        .then((res)=>{\r\n            // console.log(`長度:${res.data.data.length}`)\r\n            this.NewOrders = res.data.data.length\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    Axios\r\n        .get(ShipmentAmount)\r\n        .then((res)=>{\r\n            console.log(res.data.data.length)\r\n            if(res.data.data.length==0){\r\n                this.ShipmentAmount=0\r\n            }\r\n            else{\r\n                this.ShipmentAmount=res.data.data[0].totalAmount\r\n            }\r\n            \r\n            // console.log(res.data.data[0].totalAmount)\r\n\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    Axios\r\n        .get(PurchaseAmount)\r\n        .then((res)=>{\r\n            if(res.data.data.length==0){\r\n                this.PurchaseAmount = 0\r\n            }\r\n            else{\r\n                this.PurchaseAmount = res.data.data[0].totalAmount\r\n            }\r\n            \r\n            // console.log(res.data.data[0].totalAmount)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    Axios\r\n        .get(MemberQuantity)\r\n        .then((res)=>{\r\n            this.CurrentMember = res.data.data.totalQuantity\r\n            // console.log(res.data.data.totalQuantity)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<template src=\"./template.html\"></template>\r\n"]}]}