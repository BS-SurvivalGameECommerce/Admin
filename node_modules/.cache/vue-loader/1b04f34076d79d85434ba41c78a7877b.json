{"remainingRequest":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\BuildSchoolLab\\MVC III\\Admin\\src\\views\\ProductSalesChart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\src\\views\\ProductSalesChart\\index.vue","mtime":1600096183803},{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600009700951},{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1600009699437},{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600009700951},{"path":"C:\\BuildSchoolLab\\MVC III\\Admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1600009716613}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/ProductSalesChart","sourcesContent":["\n\n<script>\nimport Axios from 'axios';\nimport Chart from 'chart.js'\n// import '../../assets/chartjs/productchart.js'\n// import '../../assets/chartjs/productclasschart.js'\nconst url = 'https://localhost:5001/'\nconst SalesQuantity = url + 'api/Chart/SalesQuantity'\nconst MonthlyTransactions = url + 'api/Chart/MonthlyTransactions'\nconst ClassSalesQuantity = url + 'api/Chart/ClassSalesQuantity'\nconst NewOrders = url + 'api/Chart/OrderNowQuantity'\nconst ShipmentAmount = url + 'api/Chart/ShipmentAmount'\nconst PurchaseAmount = url + 'api/Chart/PurchaseAmount'\nconst MemberQuantity = url + 'Member/MemberQuantity'\n\n\nexport default {\n    name:'productsale',\n    data(){\n        return{\n            NewOrders:'',\n            CurrentMember:'',\n            ShipmentAmount:'',\n            PurchaseAmount:''\n        }\n    },\n    mounted(){\n    var totalamountjson =[]\n    Axios\n        .get(SalesQuantity)\n        .then((res) => {\n            // console.log(res.data.data)\n            totalamountjson = res.data.data\n            let productname = [];\n            let producttotalamount = [];\n            let producttotalquantity =[];\n            totalamountjson.forEach(el => {\n                productname.push(el.name);\n                producttotalamount.push(el.totalAmount);\n                producttotalquantity.push(el.totalQuantity)\n            })\n            var productdata = { \n                    'ChartName1': '產品銷售數' ,\n                    'ChartName2': '產品銷售額', \n                    'Name': productname, \n                    'TotalAmount': producttotalamount,\n                    'TotalQuantity':producttotalquantity \n                };\n                // console.log(productdata)\n                // var salesChartCanvas = $('#revenue-chart-canvas').get(0).getContext('2d')\n            var productsalesChartCanvas = document.getElementById('revenue-chart-canvas');\n            var productsalesChartData = {\n                    labels: productdata.Name,\n                    datasets: [\n                    {\n                        label: productdata.ChartName1,\n                        backgroundColor: 'rgba(60,141,188,0.5)',\n                        borderColor: 'rgba(60,141,188,0.8)',\n                        fill: true,\n                        yAxisID: 'A',\n                        data: productdata.TotalQuantity\n                    },\n                    {\n                        label: productdata.ChartName2,\n                        backgroundColor: 'transparent',\n                        borderColor: 'rgba(210, 214, 222, 1)',\n                        pointRadius: 10,\n                        pointStyle: 'circle',\n                        pointColor: 'rgba(210, 214, 222, 1)',\n                        pointBackgroundColor:'rgba(210, 214, 222, 1)',\n                        pointStrokeColor: '#c1c7d1',\n                        pointHighlightFill: '#fff',\n                        pointHighlightStroke: 'rgba(220,220,220,1)',\n                        fill: true,\n                        yAxisID: 'B',\n                        type: 'line',\n                        data: productdata.TotalAmount\n                    }]\n                }\n            var productsalesChartOptions = {\n                    maintainAspectRatio: false,\n                    responsive: true,\n                    legend: {\n                        position: 'bottom',\n                        labels: {\n                            fontColor: 'black',\n                        }\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false,\n                            },\n                            ticks: {\n                                display: false,\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: false\n                            },\n                            id: 'A',\n                            type: 'linear',\n                            position: 'left',\n                            ticks: {\n                                min: 0\n                            }\n                        },\n                        {\n                            gridLines: {\n                                display: false\n                            },\n                            id: 'B',\n                            type: 'linear',\n                            position: 'right',\n                            ticks: {\n                                min: 0\n                            }\n                        }\n                        ]}\n                }\n                // var productsalesChart = \n            new Chart(productsalesChartCanvas, {\n                type: 'bar',\n                data: productsalesChartData,\n                options: productsalesChartOptions\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n    var totalTransactionsjson =[]\n    Axios\n        .get(MonthlyTransactions)\n        .then((res)=>{\n\n            totalTransactionsjson=res.data.data\n            // console.log(totalTransactionsjson)\n            let month = [];\n            let totaltransactions = [];\n            let  totalturnover=[];\n            totalTransactionsjson.forEach(el => {\n                month.push(`${el.month}月`);\n                totaltransactions.push(el.totalTransactions);\n                totalturnover.push(el.totalTurnover)\n            })\n\n            var data = { 'ChartName1': '月成單數' ,'ChartName2': '月營業額', 'Month': month, 'TotalTransactions': totaltransactions,'ToTalturnover':totalturnover };\n\n            var salesChartCanvas = document.getElementById('revenue-month-chart-canvas');\n            var salesChartData = {\n                labels: data.Month,\n                datasets: [\n                {\n                    label: data.ChartName1,\n                    backgroundColor: 'rgba(60,141,188,0.5)',\n                    borderColor: 'rgba(60,141,188,0.8)',\n                    fill: true,\n                    yAxisID: 'A',\n                    data: data.TotalTransactions\n                },\n                {\n                    label: data.ChartName2,\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(210, 214, 222, 1)',\n                    pointRadius: 10,\n                    pointStyle: 'circle',\n                    pointColor: 'rgba(210, 214, 222, 1)',\n                    pointBackgroundColor:'rgba(210, 214, 222, 1)',\n                    pointStrokeColor: '#c1c7d1',\n                    pointHighlightFill: '#fff',\n                    pointHighlightStroke: 'rgba(220,220,220,1)',\n                    fill: true,\n                    yAxisID: 'B',\n                    type: 'line',\n                    data: data.ToTalturnover\n                }]\n            }\n            var salesChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            legend: {\n                position: 'bottom',\n                labels: {\n                    fontColor: 'black',\n                }\n            },\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        display: false\n                    }\n                }],\n                yAxes: [{\n                    gridLines: {\n                        display: false\n                    },\n                    id: 'A',\n                    type: 'linear',\n                    position: 'left',\n                    ticks: {\n                        min: 0\n                    }\n                },\n                {\n                    gridLines: {\n                        display: false\n                    },\n                    id: 'B',\n                    type: 'linear',\n                    position: 'right',\n                    ticks: {\n                        min: 0\n                    }\n                }\n                ]}\n            }\n            // var salesChart = \n            new Chart(salesChartCanvas, {\n                type: 'bar',\n                data: salesChartData,\n                options: salesChartOptions\n            })\n\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n\n    var productclaajson =[]\n    Axios\n        .get(ClassSalesQuantity)\n        .then((res)=>{\n            productclaajson=res.data.data\n            let classname = [];\n            let classtotalquantity = [];\n            productclaajson.forEach(el => {\n                classname.push(el.name);\n                classtotalquantity.push(el.totalQuantity);\n            })\n            var classdata = { 'ChartName1': '產品類別銷售數', 'Name': classname, 'TotalQuantity':classtotalquantity };\n\n            var classsalesChartCanvas = document.getElementById('revenue-class-chart-canvas');\n            var classsalesChartData = {\n                labels: classdata.Name,\n                datasets: [\n                {\n                    label: classdata.ChartName1,\n                    backgroundColor: ['#FF88C2','#FFBB66','#FFDD55','#DDFF77','#BBFF66','#66FF66','#77FFCC','#99BBFF','\t#B94FFF','#E38EFF','#FF8888'],\n                    borderColor: ['#FF88C2','#FFBB66','#FFDD55','#DDFF77','#BBFF66','#66FF66','#77FFCC','#99BBFF','\t#B94FFF','#E38EFF','#FF8888'],\n                    fill: true,\n                    data: classdata.TotalQuantity\n                }]\n            }\n            var classsalesChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            legend: {\n                position: 'bottom',\n                labels: {\n                    fontColor: 'black',\n                }\n            },\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        display: false\n                    },\n                    ticks: {\n                        display: false,\n                    }\n                }],\n                yAxes: [{\n                    gridLines: {\n                        display: false\n                    },\n                    // type: 'linear',\n                    position: 'left',\n                    ticks: {\n                        display: false,\n                    }\n                }\n                ]}\n            }\n            // var classsalesChart =\n            new Chart(classsalesChartCanvas, {\n                type: 'pie',\n                data: classsalesChartData,\n                options: classsalesChartOptions\n            })\n\n            })\n        .catch((err)=>{\n            console.log(err)\n        })\n\n    Axios\n        .get(NewOrders)\n        .then((res)=>{\n            console.log(`長度:${res.data.data.length}`)\n            this.NewOrders = res.data.data.length\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    Axios\n        .get(ShipmentAmount)\n        .then((res)=>{\n            this.ShipmentAmount=res.data.data[0].totalAmount\n            console.log(res.data.data[0].totalAmount)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    Axios\n        .get(PurchaseAmount)\n        .then((res)=>{\n            this.PurchaseAmount = res.data.data[0].totalAmount\n            console.log(res.data.data[0].totalAmount)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    Axios\n        .get(MemberQuantity)\n        .then((res)=>{\n            this.CurrentMember = res.data.data.totalQuantity\n            console.log(res.data.data.totalQuantity)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}\n\n\n</script>\n\n<template src=\"./template.html\"></template>\n"]}]}